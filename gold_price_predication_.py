# -*- coding: utf-8 -*-
"""Gold-Price-Predication .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L5gdiZPB18THYfXVqq1sbpmehMDH469w
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics

# import data 
df = pd.read_csv('gld_price_data.csv')
df.head()

df.describe()

X = df.drop(['Date','GLD'],axis=1)
Y = df['GLD']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state=2)

regressor = RandomForestRegressor(n_estimators=100)

regressor.fit(X_train,Y_train)

Y_pred = regressor.predict(X_test)

Y_pred

# Calculating R squared error
error_score = metrics.r2_score(Y_test,Y_pred)
print("R squared error : ", error_score)

MSE = np.square(np.subtract(Y_test,Y_pred)).mean()
print("MSE squared error : ", MSE)

#Comparing actual values with predicted values
Y_test = list(Y_test)

plt.figure(figsize = (12,6))
plt.plot(Y_test, color='red', label = 'Actual Value')
plt.plot(test_data_prediction, color='green', label='Predicted Value')
plt.title('Actual Price vs Predicted Price')
plt.xlabel('Number of values')
plt.ylabel('GLD Price')
plt.legend()
plt.show()